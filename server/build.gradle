buildscript {
  repositories {
    //Allow local repository for snapshot builds
    //if (version.endsWith("SNAPSHOT")) {
      mavenLocal()
      mavenCentral()
    //}
    //maven { url "http://si-nexus01.dev.setl.io:8081/repository/maven-public/" }
  }
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    //classpath("io.swagger.core.v3:swagger-gradle-plugin:${swaggerGradleVersion}")
    //classpath "io.setl.gradle.plugins:setl-gradle-plugins:1.0.1"
  }
}

apply plugin: 'org.springframework.boot'        //For fat jar support
//apply plugin: "setl-docker-plugin"
//apply plugin: 'io.swagger.core.v3.swagger-gradle-plugin'

repositories {
  flatDir {
    dirs '../libs'
  }
}

springBoot {
  mainClassName = 'io.setl.iobc.Server'
  buildInfo()
}

//dockerPlugin {
//  dockerRepositories = ['dreg.ad.setl.io/setl', '456569976649.dkr.ecr.eu-west-1.amazonaws.com/setl']
//  if(project.hasProperty("dockerTag")) {
//    dockerTag = project.dockerTag
//  }
//}

//Don't publish apps
tasks.withType(PublishToMavenRepository).configureEach { it.enabled = false }


dependencies {
  compile project(':iobc-model')
  compile project(':iobc-besu')
  compile project(':iobc-table')
  compile project(':iobc-hf')
  compile project(':corda-services')

  compile group: 'org.slf4j', name: 'slf4j-api', version: slf4jVersion
  compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: log4j2Version
  compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: log4j2Version
  compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: log4j2Version
  compile group: 'org.bouncycastle', name: 'bcprov-debug-jdk15on', version: bouncyCastleVersion

  compile group: 'org.springframework.boot', name: 'spring-boot-starter-jetty', version: springBootVersion
  compile("org.springframework.boot:spring-boot-starter-websocket:${springBootVersion}") {
    exclude module: 'spring-boot-starter-tomcat'
    exclude module: 'spring-boot-starter-logging'
  }
  compile("org.springframework.boot:spring-boot-starter-security:${springBootVersion}") {
    exclude module: 'spring-boot-starter-tomcat'
    exclude module: 'spring-boot-starter-logging'
  }

  implementation "org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}"
  implementation "org.springframework.boot:spring-boot-starter-jta-atomikos:${springBootVersion}"

  compile group: 'io.setl.bc', name: 'pychain-web-base', version: pychainVersion
  compile group: 'io.setl', name: 'util-msgpack', version: utilMsgpackVersion
  compile group: 'io.setl.http-signatures', name: 'server', version: setlHttpSignatures

}

//resolve {
//  outputFileName = 'iobc'
//  outputFormat = 'JSON'
//  prettyPrint = 'TRUE'
//  classpath = sourceSets.main.runtimeClasspath
//  resourcePackages = ['io.setl.iobc']
//  outputPath = "$project.buildDir/swagger"
//  openApiFile = new File("$project.projectDir/src/openapi/schemas.json")
//}
